from logger import log, log_error
from telebot.types import ReactionTypeEmoji
from helpers import get_arguments, get_next_matchday, get_next_matchday_formatted, get_today_minsk_time
from common import add_player_if_not_existant, validate_access_no_game_registration_needed, text_to_image, get_player_name_extended, reply_only_CEO_can_do_it, validate_CEO_zone_no_arguments
import database
import constants
import prettytable as pt
import datetime
import re

def execute(message, bot):
    try:
        bot.set_message_reaction(message.chat.id,
                                            message.message_id,
                                            [ReactionTypeEmoji('üëæ')],
                                            is_big=True)
        player = add_player_if_not_existant(message.from_user.first_name,
                                            message.from_user.last_name,
                                            message.from_user.username,
                                            message.from_user.id)
        if validate_access_no_game_registration_needed(message.chat.id, player, bot, message):
            if validate_CEO_zone_no_arguments(message.from_user.id):
                command_and_argument_split = message.text.split('\n', 1)
                if len(command_and_argument_split)>1:
                    date_params = command_and_argument_split[0].split(' ', 1)
                    if len(date_params) > 1:
                        date = None
                        try:
                            date = datetime.datetime.strptime(date_params[1], "%b %d, %Y")
                        except:
                            bot.reply_to(message, "–° –¥–∞—Ç–æ–π —á—Ç–æ-—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –í–æ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –ø–∏—à–∏: /register_money May 17, 2025")
                        if date is not None:
                            parts = command_and_argument_split[1].split('\n')
                            game_id = database.get_game_id_without_adding_new(date)
                            output = "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤:\n"
                            if game_id is not None:
                                for line in parts:
                                    lineup_player_params = re.split(r'[\s]+', line.strip(),3)
                                    first_name = lineup_player_params[0]
                                    last_name = lineup_player_params[1]
                                    lineup_player = database.find_player_by_name(first_name, last_name)
                                    if lineup_player is not None:
                                        player_id = lineup_player[7]
                                        money_given = lineup_player_params[2]
                                        comment = ""
                                        if len(lineup_player_params)>3:
                                            comment = lineup_player_params[3]
                                        if money_given.isdigit() is False:
                                            bot.reply_to(message, f"–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–æ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ –¥–µ–Ω—å–≥–∞–º –¥–ª—è —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞: {first_name} {last_name}. –î–∞–≤–∞–π –∏—Å–ø—Ä–∞–≤—å —Ç–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –∏ –∑–∞–Ω–æ–≤–æ –∑–∞–ø—É—Å–∫–∏–≤–∞–π –∫–æ–º–∞–Ω–¥—É.")
                                        else:
                                            money_given_int = int(money_given)
                                            balance_change_int = money_given_int - constants.COST_OF_1_GAME
                                            database.add_matchday_money(player_id,game_id,money_given,balance_change_int,comment)
                                            output += f"{first_name} {last_name}: {balance_change_int}\n"
                                    else:
                                        bot.reply_to(message, f"–í–æ—Ç —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ: {first_name} {last_name}. –î–∞–≤–∞–π –∏—Å–ø—Ä–∞–≤—å —Ç–∞–º —á—Ç–æ-–Ω–∏–±—É–¥—å –∏ –∑–∞–Ω–æ–≤–æ –∑–∞–ø—É—Å–∫–∏–≤–∞–π –∫–æ–º–∞–Ω–¥—É.")
                                        log(f"Can't find player to register in a lineup: {lineup_player_params}")
                                log(f"Game stats successfully registered")
                                bot.reply_to(message, "‚úÖ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞! –î–µ–Ω—å–≥–∏ –º—É—Ç—è—Ç—Å—è, –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è –∫—Ä—É—Ç–∏—Ç—Å—è! –í–∞–Ω—å–∫–∞ –µ–¥–µ—Ç –≤ –ï–≥–∏–ø–µ—Ç! –ö—Ä–∞—Å–∞–≤–∞!")
                                bot.reply_to(message, output)
                                bot.set_message_reaction(message.chat.id,
                                                    message.message_id,
                                                    [ReactionTypeEmoji('‚úçÔ∏è')],
                                                    is_big=True)
                            else:
                                bot.reply_to(message, "–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ —Ç–∞–∫–æ–π –∏–≥—Ä–æ–≤–æ–π –¥–µ–Ω—å. –ú–æ–∂–µ—Ç, –¥–∞—Ç—É –∫–∞–∫—É—é-—Ç–æ –Ω–µ —Ç—É —É–∫–∞–∑–∞–ª? –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ-–ª—é–±–æ–º—É —Å—É–±–±–æ—Ç–∞. –ò –Ω–µ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –¥–∞–ª–µ–∫–æ –≤ –±—É–¥—É—â–µ–º.")
                    else:
                        bot.reply_to(message, "–î–∞—Ç—É –Ω–∞–¥–æ —É–∫–∞–∑–∞—Ç—å! –ë–µ–∑ –¥–∞—Ç—ã –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –û—Ç–∫—É–¥–∞ –∂ —è –∑–Ω–∞—é –∑–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—é –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å? –í–æ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –ø–∏—à–∏: /register_money May 17, 2025")
                else:
                    bot.reply_to(message, "–ü—Ä–∏—à–ª–∏ –¥–∞–Ω–Ω–Ω—ã–µ –∫—Ç–æ —Å–∫–æ–ª—å–∫–æ —Å–¥–∞–ª! –¢—ã –∂ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–∏—Å–ª–∞–ª. –ó–Ω–∞–µ—à—å –≤ –∫–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å? –°–∞–º —Ä–∞–∑–±–µ—Ä–∏—Å—å!")
            else:
                reply_only_CEO_can_do_it(bot, message)
    except Exception as e:
        bot.reply_to(message, constants.UNHANDLED_EXCEPTION_MESSAGE)
        log_error(e)
        